
    private static final int ARC_WIDTH = 30;
    private static final int ARC_HEIGHT = 30;
    private JPanel gui;
    private JFrame f;
    public SideToolWindowPanel() {
        gui=new JPanel();
        gui.setLayout(null);
        gui.setSize(500, 500);
        JPanel p = new JPanel() {
            @Override
            protected void paintComponent(Graphics g) {
                super.paintComponent(g);
                Dimension arcs = new Dimension(15,15);
                int width = getWidth();
                int height = getHeight();
                Graphics2D graphics = (Graphics2D) g;
                graphics.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);


                //Draws the rounded opaque panel with borders.
                graphics.setColor(getBackground());
                graphics.fillRoundRect(0, 0, width-1, height-1, arcs.width, arcs.height);//paint background
                graphics.setColor(getForeground());
                graphics.drawRoundRect(0, 0, width-1, height-1, arcs.width, arcs.height);//paint border
            }
        };
        p.setBounds(10,10,100,30);
        p.setOpaque(false);
        p.setBackground(Color.CYAN);
        gui.setBackground(Color.DARK_GRAY);
        gui.add(p);
    }
    public JPanel getContent() {
        return gui;
    }

    @Override
    protected void paintComponent(Graphics g) {
        Graphics2D g2d = (Graphics2D) g.create();

        // Set the clipping region to ensure content is clipped to the rounded rectangle
        RoundRectangle2D roundedRectangle = new RoundRectangle2D.Double(0, 0, getWidth(), getHeight(), ARC_WIDTH, ARC_HEIGHT);
        g2d.setClip(roundedRectangle);

        // Draw the rounded rectangle background
        g2d.setColor(getBackground());
        g2d.fill(roundedRectangle);

        // Draw the border
        g2d.setColor(Color.BLACK);
        g2d.draw(roundedRectangle);

        g2d.dispose();

        // Paint the rest of the component (children, etc.)
        super.paintComponent(g);
    }
